<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SFGraphics.Controls</name>
    </assembly>
    <members>
        <member name="T:SFGraphics.Controls.GLViewport">
            <summary>
            Adds a dedicated rendering thread to <see cref="T:OpenTK.GLControl"/>.
            <para></para><para></para>
            Add rendering code to <see cref="E:SFGraphics.Controls.GLViewport.FrameRendering"/>. Frames can be rendered on the rendering thread with 
            <see cref="M:SFGraphics.Controls.GLViewport.RestartRendering"/> or on the calling thread with <see cref="M:SFGraphics.Controls.GLViewport.RenderFrame"/>.
            </summary>
        </member>
        <member name="F:SFGraphics.Controls.GLViewport.defaultGraphicsMode">
            <summary>
            The default graphics mode for rendering. Enables depth/stencil buffers and anti-aliasing. 
            </summary>
        </member>
        <member name="E:SFGraphics.Controls.GLViewport.FrameRendering">
            <summary>
            Occurs after frame and context setup and before the front and back buffer are swapped. 
            This effects <see cref="M:SFGraphics.Controls.GLViewport.RenderFrame"/> and the dedicated render thread.
            </summary>
        </member>
        <member name="P:SFGraphics.Controls.GLViewport.RenderFrameInterval">
            <summary>
            The minimum time in milliseconds between frames.
            A value of <c>0</c> unlocks the frame rate but can result in very high CPU usage.
            </summary>
        </member>
        <member name="P:SFGraphics.Controls.GLViewport.IsRendering">
            <summary>
            <c>true</c> when frame updates are being run from the dedicated rendering thread.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.#ctor(OpenTK.Graphics.GraphicsMode)">
            <summary>
            Creates a new viewport with <paramref name="graphicsMode"/>.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.#ctor">
            <summary>
            Creates a new viewport with <see cref="F:SFGraphics.Controls.GLViewport.defaultGraphicsMode"/>.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.Finalize">
            <summary>
            Frees resources if the user forgets to call <see cref="M:SFGraphics.Controls.GLViewport.Dispose"/>.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.OnNextFrameSetUp">
            <summary>
            Raises the <see cref="E:SFGraphics.Controls.GLViewport.FrameRendering"/> event.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.RenderFrame">
            <summary>
            Renders and displays a frame on the current thread. Subscribe to <see cref="E:SFGraphics.Controls.GLViewport.FrameRendering"/> to add custom rendering code.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.RestartRendering">
            <summary>
            Starts or resumes frame updates with interval specified by <see cref="P:SFGraphics.Controls.GLViewport.RenderFrameInterval"/>.
            The context is made current on the rendering thread.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.PauseRendering">
            <summary>
            Pauses the rendering thread and blocks until the current frame has finished.
            The context is made current on the calling thread.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.Dispose">
            <summary>
            Frees unmanaged resources and terminates the render thread.
            </summary>
        </member>
        <member name="M:SFGraphics.Controls.GLViewport.Dispose(System.Boolean)">
            <summary>
            Frees unmanaged resources and terminates the render thread.
            </summary>
            <param name="disposing"><c>true</c> when called directly by user code</param>
        </member>
    </members>
</doc>
