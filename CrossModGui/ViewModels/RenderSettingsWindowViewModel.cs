using System.Collections.Generic;
using System.ComponentModel;
using CrossMod.Rendering;

namespace CrossModGui.ViewModels
{
    public class RenderSettingsWindowViewModel : INotifyPropertyChanged
    {
        // Workaround to get enums to work with MVVM.
        public Dictionary<RenderSettings.RenderMode, string> DescriptionByRenderMode { get; } = new Dictionary<RenderSettings.RenderMode, string>()
        {
            { RenderSettings.RenderMode.Shaded, "Shaded" },
            { RenderSettings.RenderMode.Basic, "Basic" },
            { RenderSettings.RenderMode.Col, "Col" },
            { RenderSettings.RenderMode.Prm, "Prm" },
            { RenderSettings.RenderMode.Nor, "Nor" },
            { RenderSettings.RenderMode.Emi, "Emi" },
            { RenderSettings.RenderMode.BakeLit, "BakeLit" },
            { RenderSettings.RenderMode.Gao, "Gao Maps" },
            { RenderSettings.RenderMode.Proj, "Proj Maps" },
            { RenderSettings.RenderMode.ColorSet, "ColorSet1" },
            { RenderSettings.RenderMode.Normals, "Normals" },
            { RenderSettings.RenderMode.Tangents, "Tangents" },
            { RenderSettings.RenderMode.Bitangents, "Bitangents (generated by shader)" },
            { RenderSettings.RenderMode.BakeUV, "bake1" },
            { RenderSettings.RenderMode.UVPattern, "UV Test Pattern" },
            { RenderSettings.RenderMode.ParamID, "Param Values" }
        };

        public bool EnableDiffuse { get; set; }

        public bool EnableSpecular { get; set; }

        public bool EnableEmission { get; set; }

        public float DirectLightIntensity { get; set; }

        public float IndirectLightIntensity { get; set; }

        public bool EnableNormalMaps { get; set; }

        public bool EnableVertexColor { get; set; }

        public bool EnableEdgeTint { get; set; }

        public RenderSettings.RenderMode SelectedRenderMode { get; set; }

        public bool EnableRed { get; set; }

        public bool EnableGreen { get; set; }

        public bool EnableBlue { get; set; }

        public bool EnableAlpha { get; set; }

        public string ParamName { get; set; }

        public event PropertyChangedEventHandler PropertyChanged;
    }
}
